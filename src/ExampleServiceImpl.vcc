#include "ExampleServiceImpl.h"

ExampleServiceImpl::ExampleServiceImpl(const std::string server_uri){
    erpc::Nexus nexus(server_uri, 0, 0);
    nexus.register_req_func(17 /* request type */, hello);
    nexus.register_req_func(17 /* request type */, add);
    rpc = new erpc::Rpc<erpc::CTransport>(&nexus, nullptr, 0, nullptr);
    rpc->run_event_loop(10000 /* 10 seconds */);
}


void hello(erpc::ReqHandle *req_handle, void *){
    printf("%s\n", reinterpret_cast<char *>(req_handle->get_req_msgbuf()->buf));
    auto &resp = req_handle->pre_resp_msgbuf;
    rpc->resize_msg_buffer(&resp, strlen("world"));
    sprintf(reinterpret_cast<char *>(resp.buf), "world");

    rpc->enqueue_response(req_handle, &resp);
}

void add(erpc::ReqHandle *req_handle, void *){
    printf("%s\n", reinterpret_cast<char *>(req_handle->get_req_msgbuf()->buf));
    auto &resp = req_handle->pre_resp_msgbuf;
    rpc->resize_msg_buffer(&resp, strlen("3"));
    sprintf(reinterpret_cast<char *>(resp.buf), "3");

    rpc->enqueue_response(req_handle, &resp);
}